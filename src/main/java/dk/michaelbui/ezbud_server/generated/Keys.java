/*
 * This file is generated by jOOQ.
 */
package dk.michaelbui.ezbud_server.generated;


import dk.michaelbui.ezbud_server.generated.tables.Accounts;
import dk.michaelbui.ezbud_server.generated.tables.FlywaySchemaHistory;
import dk.michaelbui.ezbud_server.generated.tables.UserAccount;
import dk.michaelbui.ezbud_server.generated.tables.Users;
import dk.michaelbui.ezbud_server.generated.tables.records.AccountsRecord;
import dk.michaelbui.ezbud_server.generated.tables.records.FlywaySchemaHistoryRecord;
import dk.michaelbui.ezbud_server.generated.tables.records.UserAccountRecord;
import dk.michaelbui.ezbud_server.generated.tables.records.UsersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.QOM.ForeignKeyRule;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountsRecord> ACCOUNTS_PKEY = Internal.createUniqueKey(Accounts.ACCOUNTS, DSL.name("accounts_pkey"), new TableField[] { Accounts.ACCOUNTS.ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<UserAccountRecord> USER_ACCOUNT_PKEY = Internal.createUniqueKey(UserAccount.USER_ACCOUNT, DSL.name("user_account_pkey"), new TableField[] { UserAccount.USER_ACCOUNT.USER_ID, UserAccount.USER_ACCOUNT.ACCOUNT_ID }, true);
    public static final UniqueKey<UsersRecord> USERS_PKEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_pkey"), new TableField[] { Users.USERS.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<UserAccountRecord, AccountsRecord> USER_ACCOUNT__USER_ACCOUNT_ACCOUNT_ID_FKEY = Internal.createForeignKey(UserAccount.USER_ACCOUNT, DSL.name("user_account_account_id_fkey"), new TableField[] { UserAccount.USER_ACCOUNT.ACCOUNT_ID }, Keys.ACCOUNTS_PKEY, new TableField[] { Accounts.ACCOUNTS.ID }, true, ForeignKeyRule.NO_ACTION, ForeignKeyRule.NO_ACTION);
    public static final ForeignKey<UserAccountRecord, UsersRecord> USER_ACCOUNT__USER_ACCOUNT_USER_ID_FKEY = Internal.createForeignKey(UserAccount.USER_ACCOUNT, DSL.name("user_account_user_id_fkey"), new TableField[] { UserAccount.USER_ACCOUNT.USER_ID }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true, ForeignKeyRule.NO_ACTION, ForeignKeyRule.NO_ACTION);
}
