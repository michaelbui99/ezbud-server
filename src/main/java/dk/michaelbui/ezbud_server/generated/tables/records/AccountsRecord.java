/*
 * This file is generated by jOOQ.
 */
package dk.michaelbui.ezbud_server.generated.tables.records;


import dk.michaelbui.ezbud_server.generated.tables.Accounts;

import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AccountsRecord extends UpdatableRecordImpl<AccountsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.accounts.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.accounts.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.accounts.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.accounts.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.accounts.on_budget</code>.
     */
    public void setOnBudget(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.accounts.on_budget</code>.
     */
    public Boolean getOnBudget() {
        return (Boolean) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountsRecord
     */
    public AccountsRecord() {
        super(Accounts.ACCOUNTS);
    }

    /**
     * Create a detached, initialised AccountsRecord
     */
    public AccountsRecord(UUID id, String name, Boolean onBudget) {
        super(Accounts.ACCOUNTS);

        setId(id);
        setName(name);
        setOnBudget(onBudget);
        resetTouchedOnNotNull();
    }
}
