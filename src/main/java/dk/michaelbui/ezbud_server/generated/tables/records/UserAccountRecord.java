/*
 * This file is generated by jOOQ.
 */
package dk.michaelbui.ezbud_server.generated.tables.records;


import dk.michaelbui.ezbud_server.generated.tables.UserAccount;

import java.util.UUID;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserAccountRecord extends UpdatableRecordImpl<UserAccountRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_account.user_id</code>.
     */
    public void setUserId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_account.user_id</code>.
     */
    public String getUserId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.user_account.account_id</code>.
     */
    public void setAccountId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_account.account_id</code>.
     */
    public UUID getAccountId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserAccountRecord
     */
    public UserAccountRecord() {
        super(UserAccount.USER_ACCOUNT);
    }

    /**
     * Create a detached, initialised UserAccountRecord
     */
    public UserAccountRecord(String userId, UUID accountId) {
        super(UserAccount.USER_ACCOUNT);

        setUserId(userId);
        setAccountId(accountId);
        resetTouchedOnNotNull();
    }
}
